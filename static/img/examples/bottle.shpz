config density {
    100;
}

camera Isometric {
    scale {
        15;
    }

    center {
      vec3(0, -0.5, 0);
    }
}

material WhiskeyMedium {
    medium Absorb {
        color {
            vec3(0.95, 0.82, 0.45);     
        }
        density {
            0.35;
        }
    }
}

material Whiskey {
    albedo      { vec3(0.88, 0.64, 0.28); } 
    roughness   { 0.0; }
    ior         { 1.36; }
    transmission{ 1.0; }
}

material BottleGlass {
  albedo      { 1.5; }
//   albedo      { vec3(0.86, 0.95, 0.88); }
  roughness   { 0.02; }
  ior         { 1.52; }
  transmission{ 1.0; }
//   medium Absorb {
//     color   { vec3(0.86, 0.95, 0.88); }
//     density { 0.30; }         
//   }
}

material Water {
    albedo {
        vec3(0.95, 0.82, 0.45);     
    }
    roughness {
        0.0;
    }
    ior {
        1.3;
    }
    transmission {
        1.0;
    }
}

voxel Bottle size = vec3(3, 3, 3) {
  shape Rect {
    segment Floor depth = 2.4 {

      // --- Body ---
      distance RectFrustum
        from  = vec3(0.5, 0.5, 0.000),
        to    = vec3(0.5, 0.5, 0.833),
        base  = vec2(1.7, 1.7),
        top   = vec2(1.2, 1.2),
        angle = 0.0
      {
        profile_offset {
          let su = abs(u - 0.5) * 2.0;
          let sv = abs(v - 0.5) * 2.0;
          let face_axis   = min(su, sv);   // small on faces, large near corners
          let corner_axis = max(su, sv);   // large near corners

          // Strongest mid-body
          let bell = 4.0 * d * (1.0 - d);

          // Tighter transitions to eliminate a single long wave across faces
          let face_mask   = 1.0 - smoothstep(0.33, 0.36, face_axis);  
          // Flat across face only near corners
          let corner_mask =        smoothstep(0.85, 0.95, corner_axis); 

          // Inward on faces, gentle outward on corners
          let faces   = -0.06 * face_mask * bell;
          let corners =  0.03 * corner_mask * bell;
          faces + corners;
        }

        volume {
            // if d < 0.2 {
            //     if inside < 0.03 { Metal; } 
            // } else
            if inside < 0.03 { BottleGlass; } 
            if  d < 0.8 { 
                if_clear {
                    Whiskey;
                }
            }
        }        
      }
      

      // --- Shoulder
      distance RectFrustum
        from  = vec3(0.5, 0.5, 0.833),
        to    = vec3(0.5, 0.5, 0.917),
        base  = vec2(1.2, 1.2),
        top   = vec2(0.70, 0.70),
        angle = 0.0
      {
        profile_offset {
          -0.01 * cos(atan2(v - 0.5, u - 0.5) * 4.0);
        }
        volume { Metal; }
      }

      // --- Neck
      distance Cylinder
        from   = vec3(0.5, 0.5, 0.917),
        to     = vec3(0.5, 0.5, 0.979),
        radius = 0.28
      {
        volume { Metal; }
      }

      // --- Lip
      distance Cylinder
        from   = vec3(0.5, 0.5, 0.979),
        to     = vec3(0.5, 0.5, 1.000),
        radius = 0.33
      {
        volume { Glass; }
      }
    }
  }
}

place Bottle at = 0;