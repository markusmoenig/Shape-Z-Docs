import "lighthouse_mat.shpz";

config density {
    50;
}

config background {
    0.8;
}

config sun_dir {
    vec3(0.8, 1.0, 1.0);
}

config sun_emission {
    vec3(1.0, 0.9, 0.7) * 1.0;
}

camera Isometric {
    center {
        vec3(0, 3.5, 0);
    }
    scale {
        63;
    }
}

// Rock box
voxel Rock size = vec3(5, 3, 5) {
    let d1 = length(local + vec3(0, 4, 0)) - 2.0;
    let d2 = length(local + vec3(1, 2, 0)) - 1.0;
    let dist = smooth_union(d1, d2, 0.8);

    // Detail noise
    let n2 = value_noise(4, vec3(1.0, 50.0, 1.0));

    // Smooth noise base
    let n1 = value_noise(0, vec3(0.3, 1.0, 0.3));

    // Combine both
    let displaced = dist - n1 * 0.20 - n2 * 0.15;

    if displaced < 1.6 {
        Rock;
    }

    if_clear {
        // If no voxel is set, make some wavy water
        let water_height = sin(local.x * 4.0 + value_noise(2, 1.0) * 3.0) * 0.05
                + sin(local.z * 3.0 + value_noise(2, 1.0) * 2.0) * 0.05;

        if local.y < water_height -0.5 {
            Water;
        }
    }
}

voxel Tower size = vec3(3, 11, 3) {

    // Light bulb at the top in local space
    let light_distance = length(local - vec3(0, 3.5, 0)) - 0.2;
    if light_distance < 0.0 {
        YellowEmissive;
    }

    shape Rect {
        segment Floor depth = 11 {
            shape Disc radius = 1.5 {
                // Main tower body with a bricks pattern
                if d <= 8 {
                    if inside > 0.3 && inside < 0.5 {
                        pattern Bricks gap = 0.025 {
                            brick {
                                LightTowerBody;
                            }
                            cement {
                            }
                        }
                    }
                } else {
                    // Top base
                    if d < 8.2 {
                        if inside >= 0.0 {
                            Red;
                        }
                    } else
                    // Top metal fence
                    if d < 8.9 {
                        if inside >= 0.05 && inside < 0.1 {
                            if floor(v * 12.0) % 2 == 0 {
                                WhiteIron;
                            } else
                            if floor(u * 24.0) % 2 == 0 {
                                WhiteIron;
                            }
                        }
                    }
                }
            }

            // House on top, glass with metal
            shape Disc radius = 0.8 {
                if d >= 8 && d <= 10 {
                    if inside < 0.1 {
                        if floor(u * 4.0) % 6 == 0 {
                            WhiteIron;
                        } else {
                            Glass;
                        }
                    }
                } else
                if d >= 10 {
                    let r = inside / 0.8;
                    let h = sqrt(r * r);
                    let top = 10.0 + h;

                    if d <= top {
                        Red;
                    }
                }
            }
        }
    }
}

place Rock at = vec3(0, 0, 0);
place Tower at = vec3(0.0, 3, 0.0);

