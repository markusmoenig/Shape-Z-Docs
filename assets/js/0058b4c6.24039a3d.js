"use strict";(self.webpackChunkshape_z_docs=self.webpackChunkshape_z_docs||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Installation","href":"/docs/installation","docId":"installation","unlisted":false},{"type":"link","label":"Quick Start Guide","href":"/docs/quick_start","docId":"quick_start","unlisted":false},{"type":"link","label":"Distance Functions","href":"/docs/distance","docId":"distance","unlisted":false}]},"docs":{"distance":{"id":"distance","title":"Distance Functions","description":"Shape-Z supports a variety of signed distance functions (SDFs) for modeling volumetric geometry. Most of these (e.g., Cylinder, RectFrustum, NgonFrustum, Cone, Capsule, Vesica, BoxBetween) are defined between two points, via a from and to vector. Others, like Sphere and Box, are defined via an at position and their size in u, v, d coordinates.","sidebar":"tutorialSidebar"},"installation":{"id":"installation","title":"Installation","description":"The easiest way to install Shape-Z for all platforms is to use Rust and cargo. To install Rust see the easy instructions at Rustup.","sidebar":"tutorialSidebar"},"quick_start":{"id":"quick_start","title":"Quick Start Guide","description":"Let\'s get started with Shape-Z by creating a voxel box with the dimensions of 4x4x4 units and placing it at the origin. One unit (or tile) corresponds to a 1x1x1 cube in world space. By default Shape-Z uses a density of 40, meaning:","sidebar":"tutorialSidebar"}}}}')}}]);