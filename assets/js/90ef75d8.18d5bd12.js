"use strict";(self.webpackChunkshape_z_docs=self.webpackChunkshape_z_docs||[]).push([[5137],{2388:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>x,frontMatter:()=>i,metadata:()=>d,toc:()=>h});const d=JSON.parse('{"id":"language","title":"Language Reference","description":"Besides the syntactic sugar afforded by shape blocks and other high\u2011level constructs, Shape\u2011Z provides a powerful GLSL\u2011style math system.","source":"@site/docs/language.mdx","sourceDirName":".","slug":"/language","permalink":"/docs/language","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Language Reference"},"sidebar":"tutorialSidebar","previous":{"title":"Materials","permalink":"/docs/materials"},"next":{"title":"Internals & Todo","permalink":"/docs/internals"}}');var r=n(4848),t=n(8453);const i={sidebar_position:7,title:"Language Reference"},c=void 0,l={},h=[{value:"Variables",id:"variables",level:2},{value:"Inbuilt Math Functions",id:"inbuilt-math-functions",level:2}];function o(e){const s={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["Besides the syntactic sugar afforded by ",(0,r.jsx)(s.code,{children:"shape"})," blocks and other high\u2011level constructs, ",(0,r.jsx)(s.strong,{children:"Shape\u2011Z"})," provides a powerful GLSL\u2011style math system."]}),"\n",(0,r.jsx)(s.h2,{id:"variables",children:"Variables"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-rust",children:"let pos = vec3(0.0, 0.0, 0.0);\nlet pos = 0;          // promotes to vec3(0.0, 0.0, 0.0)\nlet pos = vec2(0.5);  // promotes to vec3(0.5, 0.5, 0.5)\n"})}),"\n",(0,r.jsxs)(s.p,{children:["All three statements create a variable named ",(0,r.jsx)(s.code,{children:"pos"}),", but they demonstrate different ways of supplying the value. ",(0,r.jsx)(s.strong,{children:"Shape\u2011Z"})," internally stores every value as a ",(0,r.jsx)(s.code,{children:"vec3"}),", so scalars and 2\u2011component vectors are automatically promoted."]}),"\n",(0,r.jsxs)(s.p,{children:["Vector components can be accessed or modified individually via the ",(0,r.jsx)(s.code,{children:".x"}),", ",(0,r.jsx)(s.code,{children:".y"}),", and ",(0,r.jsx)(s.code,{children:".z"})," suffixes:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-rust",children:"let p = vec3(1.0, 2.0, 3.0);\nlet h = p.y;  // h == 2.0\n\np.z = 0.0;    // p is now vec3(1.0, 2.0, 0.0)\n"})}),"\n",(0,r.jsxs)(s.p,{children:["You can define variables anywhere in the code and at any block level. However ",(0,r.jsx)(s.strong,{children:"Shape-Z"})," does not support variables per block, every variable is stored in a flat array internally in the VM for performance reasons. If you redefine a variable ",(0,r.jsx)(s.strong,{children:"Shape-Z"})," will re-use the pre-existing variable slot and overwrite the previous value."]}),"\n",(0,r.jsx)(s.h2,{id:"inbuilt-math-functions",children:"Inbuilt Math Functions"}),"\n",(0,r.jsxs)(s.p,{children:["The table below lists functions that are available in every expression. Most mirror standard GLSL behaviour, while a few domain\u2011specific helpers\u2014such as ",(0,r.jsx)(s.code,{children:"value_noise"}),"\u2014extend the set."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Function"}),(0,r.jsx)(s.th,{children:"Args"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"abs(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"Absolute value, component\u2011wise"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"atan(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Arctangent of ",(0,r.jsx)(s.em,{children:"x"})," (radians)"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"atan2(y, x)"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsxs)(s.td,{children:["Arctangent of ",(0,r.jsx)(s.em,{children:"y/x"})," preserving quadrants (radians)"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"ceil(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Smallest integer \u2265\xa0",(0,r.jsx)(s.em,{children:"x"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"clamp(x, min, max)"})}),(0,r.jsx)(s.td,{children:"3"}),(0,r.jsxs)(s.td,{children:["Clamps ",(0,r.jsx)(s.em,{children:"x"})," to the range\xa0[min,\xa0max]"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"cos(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Cosine of ",(0,r.jsx)(s.em,{children:"x"})," (radians)"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"cross(a, b)"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"3\u2011D cross product"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"degrees(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"Converts radians to degrees"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"dot(a, b)"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"Dot (scalar) product"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"floor(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Largest integer \u2264\xa0",(0,r.jsx)(s.em,{children:"x"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"fract(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Fractional part of ",(0,r.jsx)(s.em,{children:"x"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"length(v)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Euclidean length of vector ",(0,r.jsx)(s.em,{children:"v"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"log(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Natural logarithm of ",(0,r.jsx)(s.em,{children:"x"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"max(a, b)"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"Component\u2011wise maximum"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"min(a, b)"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"Component\u2011wise minimum"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"mix(a, b, t)"})}),(0,r.jsx)(s.td,{children:"3"}),(0,r.jsxs)(s.td,{children:["Linear interpolation: ",(0,r.jsx)(s.em,{children:"a"}),"(1\u2011",(0,r.jsx)(s.em,{children:"t"}),")\xa0+\xa0",(0,r.jsx)(s.em,{children:"b"}),"\xa0",(0,r.jsx)(s.em,{children:"t"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"mod(x, y)"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsxs)(s.td,{children:["Component\u2011wise remainder of ",(0,r.jsx)(s.em,{children:"x / y"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"normalize(v)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Returns ",(0,r.jsx)(s.em,{children:"v"})," scaled to unit length"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"point_at(p)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Converts a normalized ",(0,r.jsx)(s.em,{children:"(u,v,d)"})," into world space along the current segment"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"pow(x, y)"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsxs)(s.td,{children:["Component\u2011wise power ",(0,r.jsx)(s.em,{children:"x^y"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"radians(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"Converts degrees to radians"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"sin(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Sine of ",(0,r.jsx)(s.em,{children:"x"})," (radians)"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"smoothstep(edge0, edge1, x)"})}),(0,r.jsx)(s.td,{children:"3"}),(0,r.jsxs)(s.td,{children:["Smooth Hermite interpolation between ",(0,r.jsx)(s.em,{children:"edge0"})," and ",(0,r.jsx)(s.em,{children:"edge1"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"smooth_union(d1, d2, k)"})}),(0,r.jsx)(s.td,{children:"3"}),(0,r.jsxs)(s.td,{children:["Softly blends two signed\u2011distance fields with blend radius ",(0,r.jsx)(s.em,{children:"k"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"sqrt(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Square root of ",(0,r.jsx)(s.em,{children:"x"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"step(edge, x)"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsxs)(s.td,{children:["Returns 0 if ",(0,r.jsx)(s.em,{children:"x"})," < ",(0,r.jsx)(s.em,{children:"edge"})," else\xa01"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tan(x)"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsxs)(s.td,{children:["Tangent of ",(0,r.jsx)(s.em,{children:"x"})," (radians)"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"value_noise(octaves, scale)"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsxs)(s.td,{children:["Fractal value\u2011noise sample; ",(0,r.jsx)(s.em,{children:"octaves"})," (float) sets the number of layers, ",(0,r.jsx)(s.em,{children:"scale"})," (vec3) controls the frequency"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"white_noise()"})}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"Pseudo\u2011random value in\xa0[0,\xa01] tied to the current voxel"})]})]})]})]})}function x(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var d=n(6540);const r={},t=d.createContext(r);function i(e){const s=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),d.createElement(t.Provider,{value:s},e.children)}}}]);