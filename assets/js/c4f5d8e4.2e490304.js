"use strict";(self.webpackChunkshape_z_docs=self.webpackChunkshape_z_docs||[]).push([[60,634],{1459:(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});s(8774);var i=s(4586),r=s(1656),t=s(4120);s(1107);var a=s(4848);function o(){const{siteConfig:e}=(0,i.A)();return(0,a.jsx)(r.A,{title:`Welcome to ${e.title}`,description:"Shape That Next Big Vision of Yours",children:(0,a.jsx)("main",{children:(0,a.jsx)("div",{className:"center-content",children:(0,a.jsx)(t.default,{})})})})}},1643:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/lighthouse-13ff4de77015e39894a71e1573ed22e5.png"},4120:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"type":"mdx","permalink":"/front","source":"@site/src/pages/front.md","title":"Shape-Z: Shape Prozessing Language","description":"Shape-Z is a recursive, voxel-based programming language inspired by GLSL and shader-like workflows. It is designed for the procedural generation of 3D worlds using simple, expressive code. Unlike traditional modeling tools, Shape-Z treats models as programmable entities\u2014built from logical operations, shapes, and materials\u2014executed on a virtual voxel grid.","frontMatter":{},"unlisted":false}');var r=s(4848),t=s(8453);const a={},o="Shape-Z: Shape Prozessing Language",l={},d=[{value:"Core Features",id:"core-features",level:2},{value:"Performance &amp; Flexibility",id:"performance--flexibility",level:2},{value:"Use Shape-Z to",id:"use-shape-z-to",level:2},{value:"License",id:"license",level:2}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"shape-z-shape-prozessing-language",children:"Shape-Z: Shape Prozessing Language"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Shape-Z"})," is a recursive, voxel-based programming language inspired by ",(0,r.jsx)(n.strong,{children:"GLSL"})," and shader-like workflows. It is designed for the procedural generation of 3D worlds using simple, expressive code. Unlike traditional modeling tools, Shape-Z treats models as programmable entities\u2014built from logical operations, shapes, and materials\u2014executed on a virtual voxel grid."]}),"\n",(0,r.jsxs)(n.p,{children:[":: warning\n",(0,r.jsx)(n.em,{children:"Shape-Z is in the early phase of development and its syntax and features may change."}),"\n::"]}),"\n",(0,r.jsx)(n.h2,{id:"core-features",children:"Core Features"}),"\n",(0,r.jsx)(n.p,{children:"At its core, Shape-Z offers a minimal yet powerful syntax to define:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Shapes"})," like ",(0,r.jsx)(n.code,{children:"Rect"}),", ",(0,r.jsx)(n.code,{children:"Disc"})," that describe distance-based extrusion."]}),"\n",(0,r.jsxs)(n.li,{children:["Recursive ",(0,r.jsx)(n.strong,{children:"segments"})," (e.g., ",(0,r.jsx)(n.code,{children:"Floor"}),", ",(0,r.jsx)(n.code,{children:"Left"}),") that subdivide space and define the UV/extrusion domain for patterns and structured modeling."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Patterns"})," such as ",(0,r.jsx)(n.code,{children:"Bricks"}),", ",(0,r.jsx)(n.code,{children:"Modulo"}),", which automatically adapt to the current subdomain."]}),"\n",(0,r.jsxs)(n.li,{children:["Fully programmable ",(0,r.jsx)(n.strong,{children:"Disney BSDF materials"})," that can interact with patterns and noise."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Procedural logic"})," using conditionals, noise functions, and math in a GLSL-like syntax."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["You write code that ",(0,r.jsx)(n.strong,{children:"describes how space is filled"}),", using recursive composition, conditional branching, and procedural evaluation. This enables the creation of anything from detailed architecture and terrain to stylized props and abstract geometry\u2014all in a compact text format."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Image",src:s(1643).A+"",width:"800",height:"800"})}),"\n",(0,r.jsx)(n.h2,{id:"performance--flexibility",children:"Performance & Flexibility"}),"\n",(0,r.jsx)(n.p,{children:"For example, the lighthouse model shown above consists of ~11 million voxels and is fully generated in under a second (at a density of 50 per tile)."}),"\n",(0,r.jsxs)(n.p,{children:["Shape-Z supports configurable ",(0,r.jsx)(n.strong,{children:"voxel density"}),", allowing you to repurpose the same model for pixel art or high-resolution mesh export."]}),"\n",(0,r.jsx)(n.h2,{id:"use-shape-z-to",children:"Use Shape-Z to"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Build 3D models and worlds in a resolution-independent way, and render them in full Disney BSDF glory."}),"\n",(0,r.jsxs)(n.li,{children:["Export models to ",(0,r.jsx)(n.code,{children:".obj"})," format for integration in 3D engines and pipelines."]}),"\n",(0,r.jsx)(n.li,{children:"Rapidly iterate and generate complex geometry with minimal code."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Shape-Z is ideal for game developers, artists, and procedural generation enthusiasts seeking a fast and expressive tool for creative modeling."}),"\n",(0,r.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,r.jsx)(n.p,{children:"Shape-Z is dual-licensed under the same terms as Rust:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"MIT License"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Apache License (Version 2.0)"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"You may choose either license to use Shape-Z according to your needs."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);